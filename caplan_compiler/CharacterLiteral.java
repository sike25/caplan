// =================================================================================================================================
// IMPORTS

import java.util.Map;
// =================================================================================================================================



// =================================================================================================================================
/**
 * A byte-sized character literal.
 */
public class CharacterLiteral extends Literal {
// =================================================================================================================================

    
    
    // =============================================================================================================================
    // DATA MEMBERS

    /** The character stored. */
    public final char _value;
    // =============================================================================================================================


    
    // =============================================================================================================================
    /**
     * A new literal character value.
     *
     * @param token The token representing the character literal.
     */
    public CharacterLiteral (Token token) {
	
        super(token, new TypeCharacter(token._position));
        _value = token._text.charAt(0);

	// Sanity check.
	if (token._text.length() != 1) {
	    Utility.abort("CharacterLiteral(): Invalid text length " + token._text.length() + " (" + token._text + ')');
	}
	
    } // CharacterLiteral ()
    // =============================================================================================================================


    
    // =============================================================================================================================
    /**
     * Generate assembly code that will execute this expression.
     *
     * @return the generated assembly code.
     */
    public String toAssembly() {

	return "\tpush\t" + (int)_value + "\t\t; Character\n";

    } // toAssembly ()
    // =============================================================================================================================


    
    // =============================================================================================================================
    public String toString() {

        return "'" + _value + "'";

    } // toString ()
    // =============================================================================================================================


    
// =================================================================================================================================
} // class CharacterLiteral
// =================================================================================================================================
