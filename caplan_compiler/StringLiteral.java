// =================================================================================================================================
// IMPORTS

import java.util.Map;
// =================================================================================================================================



// =================================================================================================================================
/**
 * A byte-sized character literal.
 */
public class StringLiteral extends Literal {
// =================================================================================================================================

    
    
    // =============================================================================================================================
    // DATA MEMBERS

    /** The string itself. */
    public final String _value;

    /** The label to this string in the statics. */
    public final String _label;
    // =============================================================================================================================


    
    // =============================================================================================================================
    /**
     * A new literal string value.
     *
     * @param token The token representing the string literal.
     */
    public StringLiteral (Token token) {
	
        super(token, new TypePointer(token._position, new TypeCharacter(token._position)));
        _value = token._text;
	_label = "_str_" + _position;

    } // StringLiteral ()
    // =============================================================================================================================


    
    // =============================================================================================================================
    /**
     * Generate assembly code that will execute this expression.
     *
     * @return the generated assembly code.
     */
    public String toAssembly() {

	return "\tpush\t" + _label + "\n";

    } // toAssembly ()
    // =============================================================================================================================


    
    // =============================================================================================================================
    /**
     * Generate assembly code for any statics that are part of this expression.
     *
     * @return the generated assembly code.
     */
    public String toStatics () {

	// Generate a labeled string with null termination.
	return _label + ":\tdb\t\"" + _value + "\", 0\n";
	
    } // toStatics ()
    // =============================================================================================================================



    // =============================================================================================================================
    public String toString() {

        return _value;

    } // toString ()
    // =============================================================================================================================


    
// =================================================================================================================================
} // class StringLiteral
// =================================================================================================================================
